server:
  port: 8088


## Routes configuration
spring:
  application:
    name: api-gateway
  cloud:
    gateway:
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins:
              - ${UI_ORIGIN:http://localhost:3000}
            allowedHeaders: "Authorization, Content-Type"
            allowedMethods: "GET, POST, PUT, DELETE, PATCH"
            allowCredentials: true
      discovery.locator.enabled: true
      routes:
        - id: auth
          uri: lb://USER-SERVICE
          #          uri: ${USER_SERVICE_URL}
          predicates:
            - Path=/api/v1/auth/**, /api/v1/validation/**
          filters:
            - name: AuthenticationFilter
        - id: storage
          uri: lb://STORAGE-SERVICE
          #          uri: ${PROJECT_SERVICE_URL}
          predicates:
            - Path=/api/v1/storage/**
          filters:
            - name: AuthenticationFilter

## Monitoring
management:
  tracing:
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: http://localhost:9411/api/v2/spans
  endpoints:
    web:
      exposure:
        include: health,metrics,prometheus
  otlp:
    metrics:
      export:
        url: http://localhost:4318/v1/metrics
        step: 10s
        resource-attributes:
          "service.name": ${spring.application.name}
logging:
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"


## Eureka
eureka:
  client:
    enabled: true
    service-url:
      defaultZone: ${EUREKA_URL:http://eureka-server:8761/eureka}





